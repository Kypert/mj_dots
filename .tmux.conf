###
# GENERAL
#
# Note: Vi-bindings and prefix on ctrl+t
#

# Le prefix rebind!
set -g prefix C-t
unbind-key C-b
bind-key C-t send-prefix

# Let's go vi-mode (emacs is default)
setw -g mode-keys vi
set -g status-keys vi

# Allow tmux to pass trough Ctrl, Alt and Shift modifiers
# Does this work? - e.g cat and then ctrl+alt+]
setw -g xterm-keys on

# No delay for escape key press
set -sg escape-time 0

# Crank up the history
set -g history-limit 200000

# Let the pane & window numbering start at 1
set -g base-index 1
set-window-option -g pane-base-index 1

# Give us slightly more time to read some status-messages and pane-indexes
set -g display-time 2000
set -g display-panes-time 2000

# Expect utf8 in the status-row
set -g status-utf8 on

# Mouse support - set to on if you want to use the mouse, but this does not work very well for me
#setw -g mode-mouse off
#set -g mouse-select-pane off
#set -g mouse-resize-pane off
#set -g mouse-select-window off

###
# BINDINGS
#

# Reload tmux config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded."

# Copy management
bind space copy-mode
bind + delete-buffer
unbind p    # bye-bye "previous-window", but it is bound to prefix-<tab> later
bind p paste-buffer

bind-key -t vi-copy y copy-selection
#bind-key -t vi-edit Up history-up
#bind-key -t vi-edit Down history-down

# q = pane, w = windows, e = session
bind e choose-tree -u

# Vim style pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Since L has been switched, need a way to swap pane layouts
bind * next-layout

# Vim-ish navigation of windows
# 2015-11-18: No, better to be able to use normal L - switch to last used session
#bind H previous-window
#unbind L
#bind L next-window

# Use Alt-vim keys without prefix key to switch panes, note: Alt+H might trigger terminal-help in Gui-Mode
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Make it a bit easier to split a pane
unbind %
bind-key v split-window -h -c "#{pane_current_path}"
unbind '"'
unbind s
bind-key s split-window -v -c "#{pane_current_path}"

# Fast man
bind M display-message "Going man-mode!" \; command-prompt "split-window 'exec man %%'"

bind-key K confirm kill-session
bind & confirm -p "kill-window #W? (y/n)" kill-window

# "Split in" a pane to the current window
bind-key S choose-window 'join-pane -v -s "%%"'
bind-key V choose-window 'join-pane -h -s "%%"'

# This is still lol... must be able to scroll up in an easy fashion
set -g terminal-overrides 'xterm*:XT:smcup@:rmcup@'

# Logging of current window - I never need this...
#bind C-l pipe-pane -o "exec cat >>${HOME}/'#W-tmux.log'" \; display-message 'Toggled logging to ${HOME}/#W-tmux.log'
#bind M-l pipe-pane  \; display-message 'Stopped logging to ${HOME}/#W-tmux.log'

bind c new-window -c "#{pane_current_path}"
bind C command-prompt -p "New Session name: " 'new-session -s "%%"'
bind E command-prompt -p "New Session name: " 'new-session -s "%%"'

# Flip-flop between windows, like alt-tab
bind tab last-window

###
# THEME (park?)
#

set -g default-terminal "screen-256color"

set -g status-bg black
set -g status-fg white
set -g status-attr default

set -g window-status-bg default
set -g window-status-fg white
set -g window-status-attr default

set -g window-status-activity-bg default
set -g window-status-activity-fg colour166 #orange
set -g window-status-activity-attr default

set -g window-status-current-bg green
set -g window-status-current-fg black
set -g window-status-current-attr default   # Might be bold, but nah

set -g pane-border-fg white
set -g pane-active-border-fg green

set -g status-left-length 60
set -g status-left-fg colour166 #orange
set -g status-left '[#H:#S]'

set -g status-right-fg colour166 #orange

set -g message-bg black
set -g message-fg colour166 #orange

set -g display-panes-active-colour blue
set -g display-panes-active-colour colour166 #orange


###
# Window
#

# Enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# Expect utf-8
set-window-option -g utf8 on

# Automatically do not set window title, but try to name name something deterministic
set-window-option -g automatic-rename off
set-option -g set-titles on
set -g set-titles-string "[#(whoami)@#H:#S] #W"

# Resize windows based on the smallest client viewing it
set-window-option -g aggressive-resize on

# Center the window list
set -g status-justify centre

