###
# GENERAL
#
# Note: Vi-bindings and prefix on ctrl+t
# Note: Themed using catppuccin
#

# Le prefix rebind!
set -g prefix C-t
unbind-key C-b
bind-key C-t send-prefix

# Let's go vi-mode (emacs is default)
setw -g mode-keys vi
set -g status-keys vi

# No delay for escape key press
set -sg escape-time 0

# Crank up the history
set -g history-limit 200000

# Let the pane & window numbering start at 1
set -g base-index 1
setw -g pane-base-index 1

# Give us slightly more time to read some status-messages and pane-indexes
set -g display-time 2000
set -g display-panes-time 2000

# Mouse support - Block select with shift+ctrl
set -g mouse on

###
# BINDINGS
#

# Reload tmux config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded."

# A way to clear the buffer, normal Ctrl-l plus clearing the tmux history
# But this can be annoying when trying to navigate panes for example, better use clear-history manually instead
# bind -n C-l send-keys -R C-l \; clear-history

# A way to locally terminate an ssh connection without breaking the parent ssh connection
bind \~ send-keys "\~." C-j

# Copy management
unbind space    # Default of: "Arrange the current window in the next preset layout.", Use '*' instead.
bind space copy-mode
bind + delete-buffer
unbind p    # bye-bye "previous-window", but it is bound to prefix-<tab> later
bind p paste-buffer -s ""  # paste without line-feeds
bind P paste-buffer        # paste with line-feeds

bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
set -g set-clipboard on

# q = pane, w = windows, e = session
# sessions with preview, fan out to the windows
bind e choose-tree -Zw

# Vim style pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Since 'l' has been switched, need a way to swap pane layouts
bind * next-layout

# Use Alt-vim keys without prefix key to switch panes, note: Alt+H might trigger terminal-help in Gui-Mode
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Make it a bit easier to split a pane
unbind %    # Defalut of: Split the current pane into two, left and right.
bind-key v split-window -h -c "#{pane_current_path}"
unbind '"'  # Default of: Split the current pane into two, top and bottom.
unbind s    # Default of: Select a new session for the attached client interactively.
bind-key s split-window -v -c "#{pane_current_path}"

bind-key K confirm kill-session
bind & confirm -p "kill-window #W? (y/n)" kill-window

# "Split in" a pane to the current window
bind-key S choose-window 'join-pane -v -s "%%"'
bind-key V choose-window 'join-pane -h -s "%%"'

bind c new-window -c "#{pane_current_path}"
bind C command-prompt -p "New Session name: " 'new-session -s "%%"'
bind E command-prompt -p "New Session name: " 'new-session -s "%%"'

# Flip-flop between windows, like alt-tab
bind tab last-window

###
# THEME (park?)
#

set -g default-terminal "tmux-256color"

# Fix undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# This is still lol... must be able to scroll up in an easy fashion
#set -g terminal-overrides 'xterm*:XT:smcup@:rmcup@'
set -ga terminal-overrides ",*256col*:Tc"

set -g @catppuccin_flavour 'latte'
set -g @catppuccin_directory_text "#{pane_current_path}"
set -g @catppuccin_status_justify "centre"
set -g @catppuccin_status_modules_right "directory user host date_time"
set -g @catppuccin_window_current_text "#W" # Name of app and can be set to a custom name
set -g @catppuccin_window_default_text "#W" # Name of app and can be set to a custom name
set -g @catppuccin_window_status_enable "yes"
set -g @catppuccin_window_status_icon_enable "yes"
run ~/.config/tmux/plugins/catppuccin/catppuccin.tmux

###
# Window
#

# Enable activity alerts
set -g monitor-activity on

# Avoid the msg about activity, we have the status icon for that
set -g visual-activity off

# Resize windows based on the smallest client viewing it
setw -g aggressive-resize on

# Tmux 1.9 FocusGain/FocusLost, so that vim can update when moving to/from it
set -g focus-events on
